---
name: Build and push images to quay
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-push:
    runs-on: ubuntu-latest
    outputs:
      sha_short: ${{ steps.vars.outputs.sha_short }}
    steps:
      - uses: actions/checkout@v3

      - name: Get the short sha
        id: vars
        run: echo "::set-output name=sha_short::$(echo ${{ github.sha }} | cut -b -7)"

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            access-setup:
              - '.github/workflows/build-push-images.yaml'
              - 'images/access-setup/**'
            cluster-setup:
              - '.github/workflows/build-push-images.yaml'
              - 'images/cluster-setup/**'
            gateway-deployment:
              - '.github/workflows/build-push-images.yaml'
              - 'images/gateway-deployment/**'
            kcp-registrar:
              - '.github/workflows/build-push-images.yaml'
              - 'images/kcp-registrar/**'
            quay-upload:
              - '.github/workflows/build-push-images.yaml'
              - 'test/images/quay-upload/**'
            update-pipeline-service:
              - '.github/workflows/build-push-images.yaml'
              - 'images/update-pipeline-service/**'
            devenv:
              - '.github/workflows/build-push-images.yaml'
              - 'config/dependencies.yaml'
              - 'test/images/devenv/**'
            shellcheck:
              - '.github/workflows/build-push-images.yaml'
              - 'test/images/shellcheck/**'
            vulnerability:
              - '.github/workflows/build-push-images.yaml'
              - 'test/images/vulnerability-scan/**'

      # Build and push access-setup image, tagged with latest and the commit SHA.
      - name: Build access-setup Image
        id: build-image-access-setup
        if: steps.filter.outputs.access-setup == 'true'
        uses: redhat-actions/buildah-build@v2
        with:
          image: access-setup
          context: ./images/access-setup
          tags: latest ${{ steps.vars.outputs.sha_short }} ${{ github.ref_name }}
          containerfiles: |
            ./images/access-setup/Dockerfile
      - name: Push to quay.io
        id: push-to-quay-access-setup
        if: steps.filter.outputs.access-setup == 'true'
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image-access-setup.outputs.image }}
          tags: ${{ steps.build-image-access-setup.outputs.tags }} ${{ github.ref_name }}
          registry: quay.io/redhat-pipeline-service
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}
      - name: Print image url
        if: steps.filter.outputs.access-setup == 'true'
        run: |
          echo "Image pushed to ${{ steps.push-to-quay-access-setup.outputs.registry-paths }}"
      - name: Tag latest commit ID to quay.io
        id: tag-commit-quay-access-setup
        if: steps.filter.outputs.access-setup != 'true'
        env:
          image: access-setup
          registry: quay.io/redhat-pipeline-service
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}
        run: |
          ./test/images/quay-upload/image-upload.sh

      # Build and push cluster-setup image, tagged with latest and the commit SHA.
      - name: Build cluster-setup Image
        id: build-image-cluster-image
        if: steps.filter.outputs.cluster-setup == 'true'
        uses: redhat-actions/buildah-build@v2
        with:
          image: cluster-setup
          context: ./images/cluster-setup
          tags: latest ${{ steps.vars.outputs.sha_short }} ${{ github.ref_name }}
          containerfiles: |
            ./images/cluster-setup/Dockerfile
      - name: Push to quay.io
        id: push-to-quay-cluster-setup
        if: steps.filter.outputs.cluster-setup == 'true'
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image-cluster-image.outputs.image }}
          tags: ${{ steps.build-image-cluster-image.outputs.tags }} ${{ github.ref_name }}
          registry: quay.io/redhat-pipeline-service
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}
      - name: Print image url
        if: steps.filter.outputs.cluster-setup == 'true'
        run: |
          echo "Image pushed to ${{ steps.push-to-quay-cluster-setup.outputs.registry-paths }}"
      - name: Tag latest commit ID to quay.io
        id: tag-commit-quay-cluster-setup
        if: steps.filter.outputs.cluster-setup != 'true'
        env:
          image: cluster-setup
          registry: quay.io/redhat-pipeline-service
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}
        run: |
          ./test/images/quay-upload/image-upload.sh

      # Build and push gateway-deployment image, tagged with latest and the commit SHA.
      - name: Build gateway-deployment Image
        id: build-image-gateway-deployment
        if: steps.filter.outputs.gateway-deployment == 'true'
        uses: redhat-actions/buildah-build@v2
        with:
          image: gateway-deployment
          context: ./images/gateway-deployment
          tags: latest ${{ steps.vars.outputs.sha_short }} ${{ github.ref_name }}
          containerfiles: |
            ./images/gateway-deployment/Dockerfile
      - name: Push to quay.io
        id: push-to-quay-gateway-deployment
        if: steps.filter.outputs.gateway-deployment == 'true'
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image-gateway-deployment.outputs.image }}
          tags: ${{ steps.build-image-gateway-deployment.outputs.tags }} ${{ github.ref_name }}
          registry: quay.io/redhat-pipeline-service
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}
      - name: Print image url
        if: steps.filter.outputs.gateway-deployment == 'true'
        run: |
          echo "Image pushed to ${{ steps.push-to-quay-gateway-deployment.outputs.registry-paths }}"
      - name: Tag latest commit ID to quay.io
        id: tag-commit-quay-gateway-deployment
        if: steps.filter.outputs.gateway-deployment != 'true'
        env:
          image: gateway-deployment
          registry: quay.io/redhat-pipeline-service
          username: ${{ secrets.QUAY_USERNAME }}
          access_token: ${{ secrets.QUAY_TOKEN }}
        run: |
          ./test/images/quay-upload/image-upload.sh

      # Build and push kcp-registrar image, tagged with latest and the commit SHA.
      - name: Build kcp-registrar Image
        id: build-image-kcp-registrar
        if: steps.filter.outputs.kcp-registrar == 'true'
        uses: redhat-actions/buildah-build@v2
        with:
          image: kcp-registrar
          context: ./images/kcp-registrar
          tags: latest ${{ steps.vars.outputs.sha_short }} ${{ github.ref_name }}
          containerfiles: |
            ./images/kcp-registrar/Dockerfile
          build-args: |
            KCP_TAG=v0.8.2
      - name: Push to quay.io
        id: push-to-quay-kcp-registrar
        if: steps.filter.outputs.kcp-registrar == 'true'
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image-kcp-registrar.outputs.image }}
          tags: ${{ steps.build-image-kcp-registrar.outputs.tags }} ${{ github.ref_name }}
          registry: quay.io/redhat-pipeline-service
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}
      - name: Print image url
        if: steps.filter.outputs.kcp-registrar == 'true'
        run: |
          echo "Image pushed to ${{ steps.push-to-quay-kcp-registrar.outputs.registry-paths }}"
      - name: Tag latest commit ID to quay.io
        id: tag-commit-quay-kcp-registrar
        if: steps.filter.outputs.kcp-registrar != 'true'
        env:
          image: kcp-registrar
          registry: quay.io/redhat-pipeline-service
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}
        run: |
          ./test/images/quay-upload/image-upload.sh

      # Build and push quay-upload image, tagged with latest and the commit SHA.
      - name: Build quay-upload Image
        id: build-image-quay-upload
        if: steps.filter.outputs.quay-upload == 'true'
        uses: redhat-actions/buildah-build@v2
        with:
          image: quay-upload
          context: ./test/images/quay-upload
          tags: latest ${{ steps.vars.outputs.sha_short }} ${{ github.ref_name }}
          containerfiles: |
            ./test/images/quay-upload/Dockerfile
      - name: Push to quay.io
        id: push-to-quay-quay-upload
        if: steps.filter.outputs.quay-upload == 'true'
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image-quay-upload.outputs.image }}
          tags: ${{ steps.build-image-quay-upload.outputs.tags }} ${{ github.ref_name }}
          registry: quay.io/redhat-pipeline-service
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}
      - name: Print image url
        if: steps.filter.outputs.quay-upload == 'true'
        run: |
          echo "Image pushed to ${{ steps.push-to-quay-quay-upload.outputs.registry-paths }}"
      - name: Tag latest commit ID to quay.io
        id: tag-commit-quay-quay-upload
        if: steps.filter.outputs.quay-upload != 'true'
        env:
          image: quay-upload
          registry: quay.io/redhat-pipeline-service
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}
        run: |
          ./test/images/quay-upload/image-upload.sh

      # Build and push update-pipeline-service image, tagged with latest and the commit SHA.
      - name: Build update-pipeline-service Image
        id: build-image-update-pipeline-service
        if: steps.filter.outputs.update-pipeline-service == 'true'
        uses: redhat-actions/buildah-build@v2
        with:
          image: update-pipeline-service
          context: ./images/update-pipeline-service
          tags: latest ${{ steps.vars.outputs.sha_short }} ${{ github.ref_name }}
          containerfiles: |
            ./images/update-pipeline-service/Dockerfile
      - name: Push to quay.io
        id: push-to-quay-update-pipeline-service
        if: steps.filter.outputs.update-pipeline-service == 'true'
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image-update-pipeline-service.outputs.image }}
          tags: ${{ steps.build-image-update-pipeline-service.outputs.tags }} ${{ github.ref_name }}
          registry: quay.io/redhat-pipeline-service
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}
      - name: Print image url
        if: steps.filter.outputs.update-pipeline-service == 'true'
        run: |
          echo "Image pushed to ${{ steps.push-to-quay-update-pipeline-service.outputs.registry-paths }}"
      - name: Tag latest commit ID to quay.io
        id: tag-commit-quay-update-pipeline-service
        if: steps.filter.outputs.update-pipeline-service != 'true'
        env:
          image: update-pipeline-service
          registry: quay.io/redhat-pipeline-service
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}
        run: |
          ./test/images/quay-upload/image-upload.sh

      # Build and push devenv image, tagged with the branch name and the commit SHA.
      - name: Build devenv Image
        id: build-image-devenv
        if: steps.filter.outputs.devenv == 'true'
        uses: redhat-actions/buildah-build@v2
        with:
          image: devenv
          context: .
          tags: latest ${{ steps.vars.outputs.sha_short }} ${{ github.ref_name }}
          containerfiles: |
            ./test/images/devenv/Dockerfile
      - name: Push to quay.io
        id: push-to-quay-devenv
        if: steps.filter.outputs.devenv == 'true'
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image-devenv.outputs.image }}
          tags: ${{ steps.build-image-devenv.outputs.tags }} ${{ github.ref_name }}
          registry: quay.io/redhat-pipeline-service
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}
      - name: Print image url
        if: steps.filter.outputs.devenv == 'true'
        run: |
          echo "Image pushed to ${{ steps.push-to-quay-devenv.outputs.registry-paths }}"
      - name: Tag latest commit ID to quay.io
        id: tag-commit-quay-devenv
        if: steps.filter.outputs.devenv != 'true'
        env:
          image: devenv
          registry: quay.io/redhat-pipeline-service
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}
        run: |
          ./test/images/quay-upload/image-upload.sh

      # Build and push shellcheck image, tagged with latest and the commit SHA.
      - name: Build shellcheck Image
        id: build-image-shellcheck
        if: steps.filter.outputs.shellcheck == 'true'
        uses: redhat-actions/buildah-build@v2
        with:
          image: shellcheck
          context: ./test/images/shellcheck
          tags: latest ${{ steps.vars.outputs.sha_short }} ${{ github.ref_name }}
          containerfiles: |
            ./test/images/shellcheck/Dockerfile
      - name: Push to quay.io
        id: push-to-quay-shellcheck
        if: steps.filter.outputs.shellcheck == 'true'
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image-shellcheck.outputs.image }}
          tags: ${{ steps.build-image-shellcheck.outputs.tags }} ${{ github.ref_name }}
          registry: quay.io/redhat-pipeline-service
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}
      - name: Print image url
        if: steps.filter.outputs.shellcheck == 'true'
        run: |
          echo "Image pushed to ${{ steps.push-to-quay-shellcheck.outputs.registry-paths }}"
      - name: Tag latest commit ID to quay.io
        id: tag-commit-quay-shellcheck
        if: steps.filter.outputs.shellcheck != 'true'
        env:
          image: shellcheck
          registry: quay.io/redhat-pipeline-service
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}
        run: |
          ./test/images/quay-upload/image-upload.sh

      # Build and push vulnerability-scan image, tagged with latest and the commit SHA.
      - name: Build vulnerability Image
        id: build-image-vulnerability-scan
        if: steps.filter.outputs.vulnerability == 'true'
        uses: redhat-actions/buildah-build@v2
        with:
          image: vulnerability-scan
          context: ./test/images/vulnerability-scan
          tags: latest ${{ steps.vars.outputs.sha_short }} ${{ github.ref_name }}
          containerfiles: |
            ./test/images/vulnerability-scan/Dockerfile
      - name: Push to quay.io
        id: push-to-quay-vulnerability-scan
        if: steps.filter.outputs.vulnerability == 'true'
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image-vulnerability-scan.outputs.image }}
          tags: ${{ steps.build-image-vulnerability-scan.outputs.tags }} ${{ github.ref_name }}
          registry: quay.io/redhat-pipeline-service
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}
      - name: Print image url
        if: steps.filter.outputs.vulnerability == 'true'
        run: |
          echo "Image pushed to ${{ steps.push-to-quay-vulnerability-scan.outputs.registry-paths }}"
      - name: Tag latest commit ID to quay.io
        id: tag-commit-quay-vulnerability-scan
        if: steps.filter.outputs.vulnerability != 'true'
        env:
          image: vulnerability-scan
          registry: quay.io/redhat-pipeline-service
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}
        run: |
          ./test/images/quay-upload/image-upload.sh
