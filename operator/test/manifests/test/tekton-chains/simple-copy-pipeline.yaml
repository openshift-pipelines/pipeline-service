---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  annotations:
  name: simple-copy
spec:
  params:
    - description: Reference of the image the pipeline will copy from.
      name: image-src
      type: string
    - description: Reference of the image the pipeline will copy to.
      name: image-dst
      type: string
  results:
    - description: Reference of the image the pipeline will produce.
      name: IMAGE_URL
      value: $(tasks.image-copy.results.IMAGE_URL)
    - description: Digest of the image the pipeline will produce.
      name: IMAGE_DIGEST
      value: $(tasks.image-copy.results.IMAGE_DIGEST)
  tasks:
    - name: image-copy
      taskSpec:
        description: >-
          Task to copy a container image from a container repository to another.
        params:
          - name: IMAGE_SRC
            description: Reference of the image buildah will pull.
          - name: IMAGE_DST
            description: Reference of the image buildah will push.
          - name: SKOPEO_IMAGE
            description: The location of the buildah builder image.
            default: quay.io/skopeo/stable:v1.9.0
          - name: srcTLSverify
            description: Verify the TLS on the src registry endpoint
            type: string
            default: "true"
          - name: destTLSverify
            description: Verify the TLS on the dest registry endpoint
            type: string
            default: "true"
        results:
          - name: IMAGE_DIGEST
            description: Digest of the image just built.
          - name: IMAGE_URL
            description: Reference of the image the pipeline will produce.
        steps:
          - name: copy
            env:
            - name: HOME
              value: /tekton/home
            image: $(params.SKOPEO_IMAGE)
            script: |
              set -o errexit
              set -o pipefail
              if [ "$(params.IMAGE_SRC)" != "" ] && [ "$(params.IMAGE_DST)" != "" ] ; then
                skopeo copy docker://"$(params.IMAGE_SRC)" docker://"$(params.IMAGE_DST)" --src-tls-verify="$(params.srcTLSverify)" --dest-tls-verify="$(params.destTLSverify)"
                echo "$(params.IMAGE_DST)" > "$(results.IMAGE_URL.path)"
                skopeo inspect --format "{{.Digest}}" docker://"$(params.IMAGE_DST)" > "$(results.IMAGE_DIGEST.path)"
              else
                return 1
              fi
            securityContext:
                runAsNonRoot: true
                runAsUser: 65532
      params:
        - name: IMAGE_SRC
          value: $(params.image-src)
        - name: IMAGE_DST
          value: $(params.image-dst)