---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: tekton-results-database
    app.kubernetes.io/part-of: tekton-results
    app.kubernetes.io/version: devel
  name: tekton-results-database
  namespace: tekton-results
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tekton-results-database
  serviceName: postgres
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tekton-results-database
        app.kubernetes.io/version: devel
    spec:
      containers:
        - name: postgres
          image: bitnami/postgresql@sha256:23b9a21460fefdd83accd0f864e734c88bebc67c86ee752a97b77dd4843907f0 # 13.3.0
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: tekton-results-database
                  key: db.user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tekton-results-database
                  key: db.password
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: tekton-results-database
                  key: db.name
          ports:
            - containerPort: 5432
              name: postgredb
          volumeMounts:
            - name: postgredb
              mountPath: /bitnami/postgresql
          securityContext:
            seccompProfile:
              type: RuntimeDefault
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
  volumeClaimTemplates:
    - metadata:
        name: postgredb
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
