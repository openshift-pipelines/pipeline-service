---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: postgres
  namespace: openshift-gitops
  annotations:
    argocd.argoproj.io/sync-wave: "0"
spec:
  project: default
  destination:
    namespace: tekton-results
    server: https://kubernetes.default.svc
  source:
    chart: postgresql
    repoURL: https://charts.bitnami.com/bitnami
    targetRevision: 14.0.5
    helm:
      releaseName: postgres
      parameters:
        - name: image.tag
          value: 13.14.0
        - name: tls.enabled
          value: "true"
        - name: tls.certificatesSecret
          value: "postgresql-tls"
        - name: tls.certFilename
          value: "tls.crt"
        - name: tls.certKeyFilename
          value: "tls.key"
        # There is an unresolved issue with CA cert that stops pods from
        # starting due to readiness probe failure. The workaround is
        # discussed here along with the linked issues:
        # https://github.com/bitnami/charts/issues/8026
        # - name: tls.certCAFilename
        #   value: "ca.crt"
        - name: auth.database
          value: "tekton_results"
        - name: auth.username
          value: "tekton"
        - name: auth.existingSecret
          value: "tekton-results-database"
        - name: auth.secretKeys.userPasswordKey
          value: "db.password"
        - name: auth.secretKeys.adminPasswordKey
          value: "db.password"
        - name: primary.resources.requests
          value: "null"
        - name: primary.podSecurityContext.fsGroup
          value: "null"
        - name: primary.podSecurityContext.seccompProfile.type
          value: RuntimeDefault
        - name: primary.containerSecurityContext.runAsUser
          value: "null"
        - name: primary.containerSecurityContext.allowPrivilegeEscalation
          value: "false"
        - name: primary.containerSecurityContext.runAsNonRoot
          value: "true"
        - name: primary.containerSecurityContext.seccompProfile.type
          value: RuntimeDefault
        - name: primary.containerSecurityContext.capabilities.drop[0]
          value: ALL
        - name: volumePermissions.enabled
          value: "false"
        - name: shmVolume.enabled
          value: "false"
      # provide CA cert as extraEnv until the issue is resolved. See above ^
      extraEnv:
        - name: PGSSLROOTCERT
          value: /opt/bitnami/postgresql/certs/ca.crt
  syncPolicy:
    # Comment this out if you want to manually trigger deployments (using the
    # Argo CD Web UI or Argo CD CLI), rather than automatically deploying on
    # every new Git commit to your directory.
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=false
      # workaround to make working both minio: newer and old 4.5.4
      - Validate=false
    retry:
      limit: -1 # number of failed sync attempt retries; unlimited number of attempts if less than 0
      backoff:
        duration: 10s # the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
        factor: 2 # a factor to multiply the base duration after each failed retry
        maxDuration: 3m # the maximum amount of time allowed for the backoff strategy
