---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tekton-results-api
  namespace: tekton-results
spec:
  template:
    spec:
      containers:
        - name: api
      initContainers:
        - name: mc
          image: >-
            quay.io/minio/mc:RELEASE.2023-01-28T20-29-38Z
          command:
            - /bin/bash
          args:
            - '-c'
            - |
              mc --config-dir /tmp config host add minio "$S3_ENDPOINT" "$S3_ACCESS_KEY_ID" "$S3_SECRET_ACCESS_KEY" --api s3v4 &&
              if [ -z "$(mc --config-dir /tmp ls minio | grep "$S3_BUCKET_NAME")" ]; then
                mc --config-dir /tmp mb --with-lock --region "$S3_REGION" minio/"$S3_BUCKET_NAME" &&
                echo "Minio bucket $S3_BUCKET_NAME successfully created."
              fi
          imagePullPolicy: Always
          env:
            - name: S3_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  key: aws_access_key_id
                  name: tekton-results-s3
            - name: S3_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: aws_secret_access_key
                  name: tekton-results-s3
            - name: S3_REGION
              valueFrom:
                secretKeyRef:
                  key: aws_region
                  name: tekton-results-s3
            - name: S3_BUCKET_NAME
              valueFrom:
                secretKeyRef:
                  key: bucket
                  name: tekton-results-s3
            - name: S3_ENDPOINT
              valueFrom:
                secretKeyRef:
                  key: endpoint
                  name: tekton-results-s3
          volumeMounts:
            - name: ca-s3
              mountPath: /etc/ssl/certs/s3-cert.crt
              subPath: s3-cert.crt
