---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  name: open-infra-deployment-pr
  annotations:
    pipelinesascode.tekton.dev/on-event: "push"
    pipelinesascode.tekton.dev/on-target-branch: "main"
    pipelinesascode.tekton.dev/max-keep-runs: "5"
spec:
  params:
    - name: git-url
      value: "{{ repo_url }}"
    - name: revision
      value: "{{ revision }}"
    - name: infra-deployment-update-script
      value: |
        sed -i -E 's/[0-9a-f]{40}/{{ revision }}/g' components/pipeline-service/development/kustomization.yaml
        # just pin the watcher image, which is the second image ref
        yq -e -i '.images[1].newTag = "bae7851ff584423503af324200f52cd28ca99116"' components/pipeline-service/development/kustomization.yaml
        sed -i -E 's/[0-9a-f]{40}/{{ revision }}/g' components/pipeline-service/staging/base/kustomization.yaml
        # just pin the watcher image, which is the second image ref
        yq -e -i '.images[1].newTag = "bae7851ff584423503af324200f52cd28ca99116"' components/pipeline-service/staging/base/kustomization.yaml
        sed -i -E 's/[0-9a-f]{40}/{{ revision }}/g' components/monitoring/grafana/base/dashboards/pipeline-service/kustomization.yaml
        oc kustomize components/pipeline-service/staging/stone-stg-m01/resources/ > components/pipeline-service/staging/stone-stg-m01/deploy.yaml
        oc kustomize components/pipeline-service/staging/stone-stg-rh01/resources/ > components/pipeline-service/staging/stone-stg-rh01/deploy.yaml
        oc kustomize components/pipeline-service/staging/stone-stage-p01/resources/ > components/pipeline-service/staging/stone-stage-p01/deploy.yaml
    - name: slack-webhook-notification-team
      value: pipeline
  pipelineSpec:
    params:
      - description: "Source Repository URL"
        name: git-url
        type: string
      - description: "Revision of the Source Repository"
        name: revision
        type: string
      - default: ""
        name: infra-deployment-update-script
      - default: ""
        name: slack-webhook-notification-team
    tasks:
      - name: update-infra-repo
        params:
          - name: ORIGIN_REPO
            value: $(params.git-url)
          - name: REVISION
            value: $(params.revision)
          - name: SCRIPT
            value: $(params.infra-deployment-update-script)
        taskRef:
          kind: Task
          params:
            - name: name
              value: update-infra-deployments
            - name: bundle
              value: >-
                quay.io/redhat-appstudio-tekton-catalog/task-update-infra-deployments:0.1
            - name: kind
              value: task
          resolver: bundles
    finally:
      - name: send-slack-webhook-notification
        when:
          - input: $(params.slack-webhook-notification-team)
            operator: notin
            values: [""]
          - input: $(tasks.status)
            operator: in
            values: ["Failed"]
        params:
          - name: message
            value: Tekton pipelineRun $(context.pipelineRun.name) failed
          - name: key-name
            value: $(params.slack-webhook-notification-team)
        taskRef:
          kind: Task
          params:
            - name: name
              value: slack-webhook-notification
            - name: bundle
              value: >-
                quay.io/redhat-appstudio-tekton-catalog/task-slack-webhook-notification:0.1
            - name: kind
              value: task
          resolver: bundles
