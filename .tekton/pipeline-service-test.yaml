---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: pipeline-service-test
  annotations:
    pipelinesascode.tekton.dev/on-event: "[pull_request, push]"
    pipelinesascode.tekton.dev/on-target-branch: "[refs/heads/*]"
    pipelinesascode.tekton.dev/task: "[git-clone]"
    pipelinesascode.tekton.dev/max-keep-runs: "5"
spec:
  params:
    - name: repo_url
      value: "{{ repo_url }}"
    - name: revision
      value: "{{ revision }}"
    - name: target_branch
      value: "{{ target_branch }}"
  timeouts:
    pipeline: "1h0m0s"
    finally: "0h20m0s"
  pipelineSpec:
    params:
      - name: repo_url
      - name: revision
      - name: target_branch
    workspaces:
      - name: source
      - name: kubeconfig-dir
      - name: shared-workspace
    tasks:
      - name: produce-cluster-name
        runAfter:
          - "fetch-repository"
        taskSpec:
          results:
            - name: cluster-name
              description: Openshift cluster name
          steps:
            - name: cluster-name
              image: registry.access.redhat.com/ubi9/openssl:9.1-2
              script: |
                #!/usr/bin/env bash
                set -o errexit
                set -o nounset
                set -o pipefail
                set -x
                CLUSTER_NAME="ci-$( openssl rand -hex 5 )"
                echo -n "$CLUSTER_NAME" | tee $(results.cluster-name.path)
      - name: clean-clusters
        runAfter:
          - "fetch-repository"
        params:
          - name: target_branch
            value: $(params.target_branch)
        workspaces:
          - name: kubeconfig-dir
            workspace: kubeconfig-dir
          - name: source
            workspace: source
        taskSpec:
          params:
            - name: target_branch
          workspaces:
            - name: kubeconfig-dir
            - name: source
          kind: ClusterTask
          steps:
            - name: destroy-clusters
              image: quay.io/redhat-pipeline-service/ci-runner:$(params.target_branch)
              env:
                - name: "KUBECONFIG"
                  value: "$(workspaces.kubeconfig-dir.path)/kubeconfig"
                - name: BW_CLIENTID
                  valueFrom:
                    secretKeyRef:
                      name: hypershift-bitwarden
                      key: "BW_CLIENTID"
                - name: BW_CLIENTSECRET
                  valueFrom:
                    secretKeyRef:
                      name: hypershift-bitwarden
                      key: "BW_CLIENTSECRET"
                - name: BW_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: hypershift-bitwarden
                      key: "BW_PASSWORD"
              command:
                - $(workspaces.source.path)/ci/images/ci-runner/hack/bin/destroy-clusters.sh
      - name: deploy-cluster
        runAfter:
          - "produce-cluster-name"
        params:
          - name: image
            value: "quay.io/openshift-release-dev/ocp-release:4.12.2-x86_64"
          - name: region
            value: "us-east-1"
          - name: cluster-name
            value: "$(tasks.produce-cluster-name.results.cluster-name)"
          - name: target_branch
            value: $(params.target_branch)
        workspaces:
          - name: kubeconfig-dir
            workspace: kubeconfig-dir
          - name: output
            workspace: shared-workspace
          - name: source
            workspace: source
        taskSpec:
          params:
            - name: region
            - name: cluster-name
            - name: image
            - name: target_branch
          results:
            - name: kubeconfig
              description: the kubeconfig content of the new OCP cluster
          workspaces:
            - name: kubeconfig-dir
            - name: output
            - name: source
              description: The kubeconfig of new cluster will be stored onto the volume backing this Workspace
          kind: ClusterTask
          steps:
            - name: deploy-cluster
              image: quay.io/redhat-pipeline-service/ci-runner:$(params.target_branch)
              imagePullPolicy: Always
              env:
                - name: KUBECONFIG
                  value: "$(workspaces.kubeconfig-dir.path)/kubeconfig"
                - name: CLUSTER_NAME
                  value: "$(params.cluster-name)"
                - name: WORKSPACE
                  value: "$(workspaces.output.path)"
                - name: REGION
                  value: "$(params.region)"
                - name: IMAGE
                  value: "$(params.image)"
                - name: BW_CLIENTID
                  valueFrom:
                    secretKeyRef:
                      name: hypershift-bitwarden
                      key: "BW_CLIENTID"
                - name: BW_CLIENTSECRET
                  valueFrom:
                    secretKeyRef:
                      name: hypershift-bitwarden
                      key: "BW_CLIENTSECRET"
                - name: BW_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: hypershift-bitwarden
                      key: "BW_PASSWORD"
              command:
                - $(workspaces.source.path)/ci/images/ci-runner/hack/bin/deploy-cluster.sh
      - name: fetch-repository
        taskRef:
          name: git-clone
          kind: ClusterTask
        workspaces:
          - name: output
            workspace: source
        params:
          - name: url
            value: $(params.repo_url)
          - name: revision
            value: $(params.revision)
      - name: setup-ci-runner-container
        runAfter:
          - "deploy-cluster"
        retries: 1
        params:
          - name: target_branch
            value: $(params.target_branch)
        workspaces:
          - name: source
            workspace: source
          - name: kubeconfig-dir
            workspace: shared-workspace
        taskSpec:
          params:
            - name: target_branch
          workspaces:
            - name: source
            - name: kubeconfig-dir
          kind: ClusterTask
          steps:
            - name: create-ci-runner-container
              image: quay.io/redhat-pipeline-service/ci-runner:$(params.target_branch)
              resources:
                requests:
                  memory: 500Mi
                  cpu: 300m
              env:
                - name: KUBECONFIG
                  value: "$(workspaces.kubeconfig-dir.path)/kubeconfig"
              script: |
                $(workspaces.source.path)/ci/images/ci-runner/hack/bin/create-ci-runner-container.sh
            - name: copy-plnsvc-code
              image: quay.io/redhat-pipeline-service/ci-runner:$(params.target_branch)
              resources:
                requests:
                  memory: 500Mi
                  cpu: 300m
              workingDir: "$(workspaces.source.path)"
              env:
                - name: KUBECONFIG
                  value: "$(workspaces.kubeconfig-dir.path)/kubeconfig"
              command:
                - $(workspaces.source.path)/ci/images/ci-runner/hack/bin/copy-plnsvc-code.sh
      - name: plnsvc-setup
        runAfter:
          - "setup-ci-runner-container"
        retries: 1
        workspaces:
          - name: kubeconfig-dir
            workspace: shared-workspace
          - name: source
            workspace: source
        params:
          - name: repo_url
            value: $(params.repo_url)
          - name: revision
            value: $(params.revision)
          - name: target_branch
            value: $(params.target_branch)
        taskSpec:
          workspaces:
            - name: kubeconfig-dir
            - name: source
          params:
            - name: repo_url
            - name: revision
            - name: target_branch
          kind: ClusterTask
          steps:
            - name: run-plnsvc-setup
              image: quay.io/redhat-pipeline-service/ci-runner:$(params.target_branch)
              resources:
                requests:
                  memory: 500Mi
                  cpu: 300m
              workingDir: "$(workspaces.source.path)"
              env:
                - name: KUBECONFIG
                  value: "$(workspaces.kubeconfig-dir.path)/kubeconfig"
                - name: REPO_URL
                  value: $(params.repo_url)
                - name: REPO_REVISION
                  value: $(params.revision)
              command:
                - $(workspaces.source.path)/ci/images/ci-runner/hack/bin/run-plnsvc-setup.sh
      - name: tests
        runAfter:
          - "plnsvc-setup"
        retries: 1
        params:
          - name: target_branch
            value: $(params.target_branch)
        workspaces:
          - name: kubeconfig-dir
            workspace: shared-workspace
          - name: source
            workspace: source
        taskSpec:
          params:
            - name: target_branch
          workspaces:
            - name: kubeconfig-dir
            - name: source
          kind: ClusterTask
          steps:
            - name: run-tests
              image: quay.io/redhat-pipeline-service/ci-runner:$(params.target_branch)
              resources:
                requests:
                  memory: 500Mi
                  cpu: 300m
              workingDir: "$(workspaces.source.path)"
              env:
                - name: KUBECONFIG
                  value: "$(workspaces.kubeconfig-dir.path)/kubeconfig"
              command:
                - $(workspaces.source.path)/ci/images/ci-runner/hack/bin/run-tests.sh
    finally:
      - name: destroy-cluster
        when:
          - input: "$(tasks.deploy-cluster.status)"
            operator: notin
            values: ["None"]
        params:
          - name: cluster-name
            value: "$(tasks.produce-cluster-name.results.cluster-name)"
          - name: target_branch
            value: $(params.target_branch)
        workspaces:
          - name: kubeconfig-dir
            workspace: kubeconfig-dir
          - name: source
            workspace: source
        taskSpec:
          params:
            - name: cluster-name
            - name: target_branch
          workspaces:
            - name: kubeconfig-dir
            - name: source
          kind: ClusterTask
          steps:
            - name: destroy
              image: quay.io/redhat-pipeline-service/ci-runner:$(params.target_branch)
              env:
                - name: KUBECONFIG
                  value: "$(workspaces.kubeconfig-dir.path)/kubeconfig"
                - name: CLUSTER_NAME
                  value: "$(params.cluster-name)"
                - name: BW_CLIENTID
                  valueFrom:
                    secretKeyRef:
                      name: hypershift-bitwarden
                      key: "BW_CLIENTID"
                - name: BW_CLIENTSECRET
                  valueFrom:
                    secretKeyRef:
                      name: hypershift-bitwarden
                      key: "BW_CLIENTSECRET"
                - name: BW_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: hypershift-bitwarden
                      key: "BW_PASSWORD"
              command:
                - $(workspaces.source.path)/ci/images/ci-runner/hack/bin/destroy-cluster.sh
  workspaces:
    - name: kubeconfig-dir
      configMap:
        name: newkubeconfig
    - name: source
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 3Gi
    - name: shared-workspace
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 50Mi
