---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ckcp
  labels:
    app: kcp-in-a-pod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kcp-in-a-pod
  template:
    metadata:
      labels:
        app: kcp-in-a-pod
    spec:
      containers:
        - name: kcp
          image: kcp
          imagePullPolicy: Always
          ports:
            - containerPort: 6443
          command:
            - /kcp
          args:
            - start
            - --auto-publish-apis=true
            - --tls-private-key-file=/etc/kcp/tls/server/tls.key
            - --tls-cert-file=/etc/kcp/tls/server/tls.crt
            - --requestheader-client-ca-file=/etc/kcp/tls/requestheader-client/ca.crt
            - --requestheader-username-headers=X-Remote-User
            - --requestheader-group-headers=X-Remote-Group
            - --root-directory=/etc/kcp/config
            - --run-virtual-workspaces=true
            - --external-hostname=$(EXTERNAL_HOSTNAME):443
            - --v=2
          env:
            - name: EXTERNAL_HOSTNAME
              value: ckcp-ckcp.apps.domain.org
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: livez
              port: 6443
              scheme: HTTPS
            initialDelaySeconds: 45
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          startupProbe:
            httpGet:
              path: readyz
              port: 6443
              scheme: HTTPS
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 18
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: readyz
              port: 6443
              scheme: HTTPS
          resources:
            limits:
              memory: 2Gi
              cpu: 200m
            requests:
              cpu: 100m
              memory: 178Mi
          volumeMounts:
            - name: kcp-certs
              mountPath: /etc/kcp/tls/server
            - name: kcp-requestheader-client-ca
              mountPath: /etc/kcp/tls/requestheader-client
            - name: kubeconfig
              mountPath: /etc/kcp/config
      volumes:
        - name: kcp-certs
          secret:
            secretName: kcp-cert
        - name: kcp-requestheader-client-ca
          secret:
            secretName: kcp-requestheader-client-ca
            items:
              - key: ca.crt
                path: ca.crt
        - name: kubeconfig
          persistentVolumeClaim:
            claimName: kcp
